---
title: "Intro to Shiny"
author: "Howard Baek"
format: 
  revealjs:
    logo: images/shiny.png
    footer: "Baltimore Community Data Science (PH.140.801 + 802)"
    slide-number: true
    highlight-style: a11y
    theme: [default, custom.scss]
    self-contained: true
execute:
  echo: true
---

```{r setup}
#| include: false
library(shiny)
```

## Shiny

> Shiny is an R package that makes it easy to build interactive web apps straight from R. No knowledge of HTML, CSS, or JavaScript is required.It is fully customizable and extensible with HTML/CSS/JavaScript. Shiny lets you write R code to create web applications.

## Usage of Shiny

- Academia: Teaching tool for statistical concepts
- Big Pharma: Collaboration between scientists and analysts during drug development
- Big Tech: Set up realtime metrics dashboards 
- ...


## Structure of a Shiny App

```{r shiny-anatomy}
#| eval: false
#| echo: true
#| code-line-numbers: "|1|3-5|7-9|11-12"
library(shiny)

ui <- fluidPage(
  # UI code
)

server <- function(input, output) {
  # Server code
}

# Create shiny app
shinyApp(ui = ui, server = server)
```


## Demo: Hello Shiny!

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "|1|3-4|6-7|9-10|12-13|15-20|24-25|27-28|34-35|37-50|52-53"
library(shiny)

# Define UI for app that draws a histogram
ui <- fluidPage(
  
  # App title
  titlePanel("Hello Shiny!"),
  
  # Sidebar layout with input and output definitions
  sidebarLayout(
    
    # Sidebar panel for inputs
    sidebarPanel(
      
      # Input: Slider for the number of bins
      sliderInput(inputId = "bins",
                  label = "Number of bins:",
                  min = 1,
                  max = 50,
                  value = 30)
      
    ),
    
    # Main panel for displaying outputs
    mainPanel(
      
      # Output: Histogram
      plotOutput(outputId = "distPlot")
      
    )
  )
)

# Define server code required to draw a histogram
server <- function(input, output) {
  
  # Histogram of the Old Faithful Geyser Data
  # with requested number of bins
  # Code that generates a histogram is wrapped in a call
  # to renderPlot.
  output$distPlot <- renderPlot({
    
    x    <- faithful$waiting
    bins <- seq(min(x), max(x), length.out = input$bins + 1)
    
    hist(x, breaks = bins, col = "#007bc2", border = "white",
         xlab = "Waiting time to next eruption (in mins)",
         main = "Histogram of waiting times")
    
  }
  
}

# Create shiny app
shinyApp(ui = ui, server = server)
```


# Hello Shiny!

# Layouts

## Sidebar layout

![](images/layout-sidebar.png){fig-align="center" width="60%"}

::: aside
From [Mastering Shiny](https://mastering-shiny.org/action-layout.html#page-with-sidebar)
:::

## Multi-row layout

![](images/layout-fluidrow.png){fig-align="center" width="60%"}

::: aside
From [Mastering Shiny](https://mastering-shiny.org/action-layout.html#multi-row)
:::

## Horizontal Tabs with `tabsetPanel()`

![](images/tabset.png){fig-align="center" width="60%"}


::: aside
From [Mastering Shiny](https://mastering-shiny.org/action-layout.html#tabsets)
:::


## Vertical Tabs with `navListPanel()`

![](images/navlistPanel.png){fig-align="center" width="60%"}

::: aside
From [Mastering Shiny](https://mastering-shiny.org/action-layout.html#navlists-and-navbars)
:::


## Dashboards

![](images/crandash.png){fig-align="center" width="60%"}





## Shiny Widgets Gallery

::: {style="text-align: center"}
<https://shiny.posit.co/r/gallery/widgets/widget-gallery/>
:::

<iframe data-src="https://gallery.shinyapps.io/081-widgets-gallery/" width="100%" height="500px" style="border:1px solid;border-radius: 5px;" data-external="1">

</iframe>

## Shiny App Gallery

::: {style="text-align: left"}
[Feature Demos](https://shiny.posit.co/r/gallery/#feature-demos)
:::


## Troubleshooting


```{r}
#| eval: false
#| echo: true
library(shiny)

# Define UI for app that draws a histogram
ui <- fluidPage(
  # App title
  titlePanel("Hello Shiny!"
  
  # Sidebar layout with input and output definitions
  sidebarLayout(
    # Sidebar panel for inputs
    sidebarPanel(
      # Input: Slider for the number of bins
      sliderInput(inputId = "bins",
                  label = "Number of bins:",
                  min = 1,
                  max = 50,
                  value = 30
    ),
    
    # Main panel for displaying outputs
    mainPanel(
      # Output: Histogram
      plotOutput(outputId = "distPlot")
    )
  )
)
             
# Define server code required to draw a histogram
server <- function(input, output) {
}
             
# Create shiny app
shinyApp(ui = ui, server = server)
```
             

## Share your Shiny Applications Online


::: {style="text-align: left"}
[shinyapps.io](https://www.shinyapps.io/)
:::


             