---
title: "Getting Started with Shiny"
author: "Howard Baek"
institute: "Fred Hutch Data Science Lab (DaSL)"
format: 
  revealjs:
    logo: images/shiny.png
    footer: "Baltimore Community Data Science (PH.140.801 + 802)"
    slide-number: true
    highlight-style: a11y
    theme: [default, custom.scss]
    self-contained: true
execute:
  echo: true
title-slide-attributes:
    data-background-image: "images/shiny.png"
    data-background-size: cover
    data-background-opacity: "0.33"
---

```{r setup}
#| include: false
library(shiny)
```

## Goal of this talk


![](images/taste.jpg){fig-align="center"}


Photo by <a href="https://unsplash.com/@khlebnikovayulia?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Yulia Khlebnikova</a> on <a href="https://unsplash.com/photos/FDYbS43jUrU?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>
 


## Agenda

- Introduction to Shiny
- Structure of a Shiny App
- Demo Shiny App
- Layouts of Shiny
- Shiny Gallery
- Troubleshooting
- Sharing your Shiny App Online


## Shiny

> Shiny is an R package that makes it easy to build interactive web apps straight from R. No knowledge of HTML, CSS, or JavaScript is required, but it is fully customizable and extensible with these languages. Essentially, Shiny lets you write R and create web applications.

## Usage of Shiny

- Academia: Teaching tool for statistical concepts and for new statistical methods.
- Big Pharma: Collaboration between scientists and analysts during drug development
- Big Tech: Set up real-time metrics dashboards 
- Many others...


## Structure of a Shiny App

```{r shiny-anatomy}
#| eval: false
#| echo: true
#| code-line-numbers: "|1|3-5|7-9|11-12"
library(shiny)

ui <- fluidPage(
  # UI code
)

server <- function(input, output) {
  # Server code
}

# Create shiny app
shinyApp(ui = ui, server = server)
```


## Demo App: Hello Shiny!

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "|1|3-4|6-7|9-10|12-13|15-20|24-25|27-28|34-52|54-55"
library(shiny)

# Define UI for app that draws a histogram
ui <- fluidPage(
  
  # App title
  titlePanel("Hello Shiny!"),
  
  # Sidebar layout 
  sidebarLayout(
    
    # Sidebar panel
    sidebarPanel(
      
      # Input: Slider for the number of bins
      sliderInput(inputId = "bins",
                  label = "Number of bins:",
                  min = 1,
                  max = 50,
                  value = 30)
      
    ),
    
    # Main panel for displaying outputs
    mainPanel(
      
      # Output: Histogram
      plotOutput(outputId = "distPlot")
      
    )
  )
)

# Define server code required to draw a histogram
server <- function(input, output) {
  
  # Histogram of the Old Faithful Geyser Data
  # with requested number of bins
  # Code that generates a histogram is wrapped in a call
  # to renderPlot.
  output$distPlot <- renderPlot({
    
    x    <- faithful$waiting
    bins <- seq(min(x), max(x), length.out = input$bins + 1)
    
    hist(x, breaks = bins, col = "#007bc2", border = "white",
         xlab = "Waiting time to next eruption (in mins)",
         main = "Histogram of waiting times")
    
  })
  
}

# Create shiny app
shinyApp(ui = ui, server = server)
```

# Layouts

## Single Page: Sidebar layout

![](images/layout-sidebar.png){fig-align="center" width="60%"}

::: aside
From [Mastering Shiny](https://mastering-shiny.org/action-layout.html#page-with-sidebar)
:::

## Single Page: Multi-row layout

![](images/layout-fluidrow.png){fig-align="center" width="60%"}

::: aside
From [Mastering Shiny](https://mastering-shiny.org/action-layout.html#multi-row)
:::

## Multi-page: Horizontal Tabs with `tabsetPanel()`

![](images/tabset.png){fig-align="center" width="60%"}


::: aside
From [Mastering Shiny](https://mastering-shiny.org/action-layout.html#tabsets)
:::


## Multi-page: Vertical Tabs with `navListPanel()`

![](images/navlistPanel.png){fig-align="center" width="60%"}

::: aside
From [Mastering Shiny](https://mastering-shiny.org/action-layout.html#navlists-and-navbars)
:::


## Multi-page: Dashboards

![](images/crandash.png){fig-align="center" width="40%"}


# Gallery


## Shiny Widgets Gallery

::: {style="text-align: center"}
<https://shiny.posit.co/r/gallery/widgets/widget-gallery/>
:::

<iframe data-src="https://gallery.shinyapps.io/081-widgets-gallery/" width="100%" height="500px" style="border:1px solid;border-radius: 5px;" data-external="1">

</iframe>

## Shiny App Gallery

# Troubleshooting and Sharing your Shiny App Online

## Troubleshooting

Missing parenthesis, commas, and typos

```{r}
#| eval: false
#| echo: true
library(shiny)

# Define UI for app that draws a histogram
ui <- fluidPage(
  
  # App title
  titlePanel("Hello Shiny!"),
  
  # Sidebar layout with input and output definitions
  sidebarLayout(
    
    # Sidebar panel for inputs
    sidebarPanel(
      
      # Input: Slider for the number of bins
      sliderInput(inputId = "bins",
                  label = "Number of bins:",
                  min = 1,
                  max = 50,
                  value = 30)
      
    ),
    
    # Main panel for displaying outputs
    mainPanel(
      
      # Output: Histogram
      plotOutput(outputId = "distPlot")
      
    )
  )
)

# Define server code required to draw a histogram
server <- function(input, output) {
  
  # Histogram of the Old Faithful Geyser Data
  # with requested number of bins
  # Code that generates a histogram is wrapped in a call
  # to renderPlot.
  output$distPlot <- renderPlot({
    
    x <- faithful$waiting
    bins <- seq(min(x), max(x), length.out = input$bins + 1)
    
    hist(x, breaks = bins, col = "#007bc2", border = "white",
         xlab = "Waiting time to next eruption (in mins)",
         main = "Histogram of waiting times")
    
  })
  
}

# Create shiny app
shinyApp(ui = ui, server = server)
```


## Share your Shiny Applications Online

::: {style="text-align: left"} 
[shinyapps.io](https://www.shinyapps.io/)
:::

- shinyapps.io is a software as a service (SaaS) product that makes it easy to share your Shiny apps online.
- It runs in the cloud on shared servers by Posit.
- It has both free and paid plans.


## Further Resources

- [Mastering Shiny book](https://mastering-shiny.org/index.html)
- [Get Started Tutorials](https://shiny.posit.co/r/getstarted/shiny-basics/lesson1/index.html)
- [Shiny Articles](https://shiny.posit.co/r/articles/#start)
- [shinyapps.io Articles](https://shiny.posit.co/r/articles/share/shinyapps/)
- [Shiny Application Layout Guide](https://shiny.posit.co/r/articles/build/layout-guide/)
- [shinyapps.io User Guide](https://docs.posit.co/shinyapps.io/?_gl=1*acevi2*_ga*NDcwMjYxMTc2LjE2ODYxNzIxMjQ.*_ga_HXP006LBGY*MTY5NjAwNzY3MS40LjEuMTY5NjAwNzY4My4wLjAuMA..)



## Reference

- [Getting Started with Shiny for R - posit::conf 2023](https://github.com/posit-conf-2023/shiny-r-intro)





## Thank you!


![](images/shiny.png){fig-align="center" width="40%"}

